{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMISHA\\\\Desktop\\\\Web_Development_Projects\\\\Analytics_Dashboard_React\\\\client\\\\src\\\\components\\\\Charts\\\\Piechart.js\";\nimport React, { Fragment } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Piechart = ({\n  fetcheddata\n}) => {\n  if ({\n    fetcheddata\n  }) console.log({\n    fetcheddata\n  });\n  var arrdata = [];\n  var counttype = [];\n\n  const generateData = ({\n    fetcheddata\n  }) => {\n    fetcheddata[0].forEach(d => {\n      arrdata.push({\n        \"key\": d.key_as_string,\n        \"count\": d.group_by_Type.buckets.forEach(bucket => {\n          counttype.push({\n            'total': bucket.total_count.value,\n            'type': bucket.key\n          });\n        })\n      });\n    });\n  };\n\n  generateData();\n  console.log(arrdata[0].key);\n  return (\n    /*#__PURE__*/\n    // <g transform = {`translate{${x}, ${y}}`} />\n    _jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = Piechart;\nexport default Piechart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piechart\");","map":{"version":3,"sources":["C:/Users/AMISHA/Desktop/Web_Development_Projects/Analytics_Dashboard_React/client/src/components/Charts/Piechart.js"],"names":["React","Fragment","d3","Piechart","fetcheddata","console","log","arrdata","counttype","generateData","forEach","d","push","key_as_string","group_by_Type","buckets","bucket","total_count","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAChC,MAAG;AAACA,IAAAA;AAAD,GAAH,EAAiBC,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AACnB,MAAIG,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,QAAMC,YAAY,GAAG,CAAC;AAACL,IAAAA;AAAD,GAAD,KAAmB;AACtCA,IAAAA,WAAW,CAAC,CAAD,CAAX,CAAeM,OAAf,CAAwBC,CAAD,IAAK;AAC1BJ,MAAAA,OAAO,CAACK,IAAR,CAAa;AACX,eAAQD,CAAC,CAACE,aADC;AAEX,iBAAUF,CAAC,CAACG,aAAF,CAAgBC,OAAhB,CAAwBL,OAAxB,CAAiCM,MAAD,IAAU;AAChDR,UAAAA,SAAS,CAACI,IAAV,CAAe;AAAC,qBAAQI,MAAM,CAACC,WAAP,CAAmBC,KAA5B;AAAkC,oBAAOF,MAAM,CAACG;AAAhD,WAAf;AACH,SAFS;AAFC,OAAb;AAMD,KAPD;AAQD,GATD;;AAUDV,EAAAA,YAAY;AACZJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAAC,CAAD,CAAP,CAAWY,GAAvB;AAGA;AAAA;AACO;AACA,YAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFP;AAMA,CAxBD;;KAAMhB,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React, {Fragment} from 'react'\r\nimport * as d3 from 'd3';\r\n\r\nconst Piechart = ({fetcheddata}) => {\r\n    if({fetcheddata})console.log({fetcheddata});\r\n  var arrdata = [];\r\n  var counttype = [];\r\n  const generateData = ({fetcheddata}) => {\r\n    fetcheddata[0].forEach((d)=>{\r\n      arrdata.push({\r\n        \"key\" : d.key_as_string,\r\n        \"count\" : d.group_by_Type.buckets.forEach((bucket)=>{\r\n            counttype.push({'total':bucket.total_count.value,'type':bucket.key});\r\n        })\r\n      })\r\n    })\r\n  }\r\n generateData();\r\n console.log(arrdata[0].key);\r\n\r\n\r\n return (\r\n        // <g transform = {`translate{${x}, ${y}}`} />\r\n        <Fragment>\r\n            \r\n        </Fragment>      \r\n    )\r\n}\r\n\r\nexport default Piechart;\r\n"]},"metadata":{},"sourceType":"module"}