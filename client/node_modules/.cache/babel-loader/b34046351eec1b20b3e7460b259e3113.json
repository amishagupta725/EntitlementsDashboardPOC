{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMISHA\\\\Desktop\\\\Web_Development_Projects\\\\Analytics_Dashboard_React\\\\client\\\\src\\\\components\\\\Charts\\\\Piechart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Piechart = ({\n  fetcheddata\n}) => {\n  _s();\n\n  const [counttype, setData] = useState([]);\n  useEffect(() => {\n    const arrdata = [];\n    const counttype = [];\n    if (fetcheddata.length) fetcheddata.forEach(d => {\n      d.group_by_Type.buckets.forEach(bucket => {\n        counttype.push({\n          'total': bucket.total_count.value,\n          'type': bucket.key\n        });\n      });\n      arrdata.push({\n        \"key\": d.key_as_string,\n        \"count\": counttype\n      });\n    });\n    setData(counttype);\n  }, [fetcheddata]);\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"label\",\n          children: `${payload[0].value}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: 400,\n    height: 600,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 300,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: counttype,\n        cx: 200,\n        cy: 200,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"total\",\n        label: ({\n          cx,\n          cy,\n          midAngle,\n          innerRadius,\n          outerRadius,\n          total,\n          index\n        }) => {\n          console.log(\"handling label?\");\n          const RADIAN = Math.PI / 180;\n          const radius = 25 + innerRadius + (outerRadius - innerRadius);\n          const x = cx + radius * Math.cos(-midAngle * RADIAN);\n          const y = cy + radius * Math.sin(-midAngle * RADIAN);\n          if (counttype[index].total > 3) return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: y,\n            fill: \"#FF8042\",\n            textAnchor: x > cx ? \"start\" : \"end\",\n            dominantBaseline: \"central\",\n            children: counttype[index].type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this);\n        },\n        children: counttype.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        wrapperStyle: {\n          position: \"right\"\n        },\n        payload: counttype.map((item, index) => ({\n          value: `${item.type} (${item.total})`,\n          type: \"square\",\n          id: item.type,\n          color: COLORS[index % COLORS.length]\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Piechart, \"uH510iL365EHLI+cOsqrg6VfPt8=\");\n\n_c = Piechart;\nexport default Piechart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piechart\");","map":{"version":3,"sources":["C:/Users/AMISHA/Desktop/Web_Development_Projects/Analytics_Dashboard_React/client/src/components/Charts/Piechart.js"],"names":["React","useState","useEffect","PieChart","Pie","Legend","Tooltip","ResponsiveContainer","Cell","Piechart","fetcheddata","counttype","setData","arrdata","length","forEach","d","group_by_Type","buckets","bucket","push","total_count","value","key","key_as_string","COLORS","CustomTooltip","active","payload","label","cx","cy","midAngle","innerRadius","outerRadius","total","index","console","log","RADIAN","Math","PI","radius","x","cos","y","sin","type","map","entry","position","item","id","color"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer,Cell } from 'recharts';\r\n\r\n\r\nconst Piechart = ({fetcheddata}) => {\r\n\r\n const [counttype, setData] = useState([]); \r\n useEffect(()=>{\r\n  const arrdata = [];\r\n  const counttype = [];\r\n  if (fetcheddata.length) fetcheddata.forEach((d)=>{\r\n        d.group_by_Type.buckets.forEach((bucket)=>{\r\n        counttype.push({'total':bucket.total_count.value,'type':bucket.key});\r\n    })  \r\n      arrdata.push({\r\n        \"key\" : d.key_as_string,\r\n        \"count\" : counttype\r\n      })\r\n    })\r\n    setData(counttype);\r\n },[fetcheddata])\r\n \r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`${payload[0].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n return (\r\n        <ResponsiveContainer width={400} height={600}>\r\n        <PieChart width={300} height={300}>\r\n        <Pie\r\n        data={counttype}\r\n        cx={200}\r\n        cy={200}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"total\"\r\n        label={({\r\n          cx,\r\n          cy,\r\n          midAngle,\r\n          innerRadius,\r\n          outerRadius,\r\n          total,\r\n          index\r\n        }) => {\r\n          console.log(\"handling label?\");\r\n          const RADIAN = Math.PI / 180;\r\n          const radius = 25 + innerRadius + (outerRadius - innerRadius);\r\n          const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n          const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n          if (counttype[index].total>3) return ( \r\n            <text\r\n              x={x}\r\n              y={y}\r\n              fill=\"#FF8042\"\r\n              textAnchor={x > cx ? \"start\" : \"end\"}\r\n              dominantBaseline=\"central\"\r\n            >\r\n              {counttype[index].type}\r\n            </text>\r\n          );\r\n        }}\r\n      >\r\n        {counttype.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip content={<CustomTooltip />} />\r\n      <Legend\r\n       wrapperStyle={{position:\"right\"}}\r\n        payload={\r\n          counttype.map(\r\n            (item, index) => ({\r\n              value: `${item.type} (${item.total})`,\r\n              type: \"square\",\r\n              id: item.type,\r\n              color: COLORS[index % COLORS.length]\r\n            })\r\n          )\r\n        }\r\n      />\r\n        </PieChart>\r\n      </ResponsiveContainer>   \r\n    )\r\n}\r\n\r\nexport default Piechart;\r\n"]},"metadata":{},"sourceType":"module"}