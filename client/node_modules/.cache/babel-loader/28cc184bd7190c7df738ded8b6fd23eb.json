{"ast":null,"code":"// import * as d3 from 'd3';\n// import React, { useRef, useEffect } from 'react';\n// const Bargraph = ({width, height, fetcheddata}) => {\n//     const ref = useRef();\n//     useEffect(() => {\n//         const svg = d3.select(ref.current)\n//             .attr(\"width\", width)\n//             .attr(\"height\", height)\n//             .style(\"border\", \"1px solid black\")\n//     }, []);\n//     useEffect(() => {\n//         draw();\n//     }, [fetcheddata.aggregations]);\n//     const draw = () => {\n//         const svg = d3.select(ref.current);\n//         var selection = svg.selectAll(\"rect\").data(fetcheddata.aggregations);\n//         var yScale = d3.scaleLinear()\n//                             .domain([0, d3.max(fetcheddata.aggregations)])\n//                             .range([0, height-100]);\n//         selection\n//             .transition().duration(300)\n//                 .attr(\"height\", (d) => yScale(d))\n//                 .attr(\"y\", (d) => height - yScale(d))\n//         selection\n//             .enter()\n//             .append(\"rect\")\n//             .attr(\"x\", (d, i) => i * 45)\n//             .attr(\"y\", (d) => height)\n//             .attr(\"width\", 40)\n//             .attr(\"height\", 0)\n//             .attr(\"fill\", \"orange\")\n//             .transition().duration(300)\n//                 .attr(\"height\", (d) => yScale(d))\n//                 .attr(\"y\", (d) => height - yScale(d))\n//         selection\n//             .exit()\n//             .transition().duration(300)\n//                 .attr(\"y\", (d) => height)\n//                 .attr(\"height\", 0)\n//             .remove()\n//     }\n//     return (\n//         <div className=\"chart\">\n//             <svg ref={ref}>\n//             </svg>\n//         </div>\n//     )\n// }\n// export default Bargraph;","map":{"version":3,"sources":["C:/Users/AMISHA/Desktop/Web_Development_Projects/Analytics_Dashboard_React/client/src/components/Charts/Bargraph.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA","sourcesContent":["// import * as d3 from 'd3';\r\n// import React, { useRef, useEffect } from 'react';\r\n\r\n// const Bargraph = ({width, height, fetcheddata}) => {\r\n//     const ref = useRef();\r\n\r\n//     useEffect(() => {\r\n//         const svg = d3.select(ref.current)\r\n//             .attr(\"width\", width)\r\n//             .attr(\"height\", height)\r\n//             .style(\"border\", \"1px solid black\")\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         draw();\r\n//     }, [fetcheddata.aggregations]);\r\n\r\n//     const draw = () => {\r\n        \r\n//         const svg = d3.select(ref.current);\r\n//         var selection = svg.selectAll(\"rect\").data(fetcheddata.aggregations);\r\n//         var yScale = d3.scaleLinear()\r\n//                             .domain([0, d3.max(fetcheddata.aggregations)])\r\n//                             .range([0, height-100]);\r\n        \r\n//         selection\r\n//             .transition().duration(300)\r\n//                 .attr(\"height\", (d) => yScale(d))\r\n//                 .attr(\"y\", (d) => height - yScale(d))\r\n\r\n//         selection\r\n//             .enter()\r\n//             .append(\"rect\")\r\n//             .attr(\"x\", (d, i) => i * 45)\r\n//             .attr(\"y\", (d) => height)\r\n//             .attr(\"width\", 40)\r\n//             .attr(\"height\", 0)\r\n//             .attr(\"fill\", \"orange\")\r\n//             .transition().duration(300)\r\n//                 .attr(\"height\", (d) => yScale(d))\r\n//                 .attr(\"y\", (d) => height - yScale(d))\r\n        \r\n//         selection\r\n//             .exit()\r\n//             .transition().duration(300)\r\n//                 .attr(\"y\", (d) => height)\r\n//                 .attr(\"height\", 0)\r\n//             .remove()\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"chart\">\r\n//             <svg ref={ref}>\r\n//             </svg>\r\n//         </div>\r\n        \r\n//     )\r\n\r\n// }\r\n\r\n// export default Bargraph;\r\n"]},"metadata":{},"sourceType":"module"}