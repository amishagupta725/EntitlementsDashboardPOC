[{"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\index.js":"1","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\App.js":"2","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\api.js":"4","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Bargraph.js":"5","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Piechart.js":"6","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPiechart.js":"7","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPieChart.js":"8","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Table.js":"9","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\MonthPieChart.js":"10","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearPieChart.js":"11","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearBarGraph.js":"12","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Dropdown.js":"13","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\styles.js":"14","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Yearlytable.js":"15"},{"size":199,"mtime":1624938998774,"results":"16","hashOfConfig":"17"},{"size":4150,"mtime":1626427506840,"results":"18","hashOfConfig":"17"},{"size":1158,"mtime":1626413964440,"results":"19","hashOfConfig":"17"},{"size":173,"mtime":1624776988604,"results":"20","hashOfConfig":"17"},{"size":1906,"mtime":1626065644501,"results":"21","hashOfConfig":"17"},{"size":2696,"mtime":1625482200545,"results":"22","hashOfConfig":"17"},{"size":1917,"mtime":1624967268948,"results":"23","hashOfConfig":"17"},{"size":3230,"mtime":1625650215635,"results":"24","hashOfConfig":"17"},{"size":2877,"mtime":1626411106232,"results":"25","hashOfConfig":"17"},{"size":3764,"mtime":1626065560388,"results":"26","hashOfConfig":"17"},{"size":2782,"mtime":1625816912418,"results":"27","hashOfConfig":"17"},{"size":2130,"mtime":1626407608866,"results":"28","hashOfConfig":"17"},{"size":671,"mtime":1626068536621,"results":"29","hashOfConfig":"17"},{"size":817,"mtime":1626352038964,"results":"30","hashOfConfig":"17"},{"size":2973,"mtime":1626410864430,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1bg3x6k",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\index.js",[],["68","69"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\App.js",["70"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\layout\\Navbar.js",["71"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\api.js",[],["72","73"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Bargraph.js",["74","75"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer } from \"recharts\";\r\n  \r\n\r\nconst Bargraph = ({fetcheddata,year}) => {\r\n    const history = useHistory();\r\n    const [data, setData] = useState([]); \r\n    useEffect(()=>{\r\n        const arraydata = [];\r\n        if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n          if(d.key_as_string.slice(0,4)==year){\r\n            d.group_by_month.buckets.forEach((month)=>{\r\n                const temp = month.group_by_Type.buckets;\r\n                const data = {};\r\n                temp.forEach((type)=>{\r\n                    data[type.key] = type.total_count.value;\r\n                })\r\n                arraydata.push({\"name\": month.key_as_string.slice(0,7),\"Casper\": data['Casper'], \"Cirrus\": data['Cirrus'], \"VIS\": data['VIS'], \"Gemini\": data['Gemini']})\r\n            })}\r\n        })\r\n        setData(arraydata);\r\n    },[fetcheddata])\r\n    console.log(data);\r\n\r\n    return (\r\n        <ResponsiveContainer width={600} height={500}>\r\n        <BarChart\r\n        width={400}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 50,\r\n          right: 80,\r\n          left: 30,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"5 5\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"vertical\" wrapperStyle={{top: 80, left: 540}}/>\r\n        <Bar dataKey=\"Casper\" stackId=\"d\" fill=\"#0088FE\" />\r\n        <Bar dataKey=\"Cirrus\" stackId=\"d\" fill=\"#00C49F\" />\r\n        <Bar dataKey=\"Gemini\" stackId=\"d\" fill=\"#FFBB28\" onClick={(data,index)=>{return history.push(`/table/${data.name}`)}}/>\r\n        <Bar dataKey=\"VIS\" stackId=\"d\" fill=\"#FF8042\" />\r\n      </BarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default Bargraph;\r\n","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Piechart.js",[],["76","77"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPiechart.js",["78","79"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPieChart.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Table.js",["80","81","82","83"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\MonthPieChart.js",["84","85","86","87"],"import React , {useState, useEffect} from 'react'\r\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer,Cell } from 'recharts';\r\n\r\nconst MonthPieChart = ({fetcheddata,yeardata,year}) => {\r\n    const [yearcount, setYearCount] = useState([]);\r\n    const [countmonth, setMonthCount] = useState([]); \r\n\r\n    useEffect(()=>{\r\n    const yearcounts = [];\r\n    if(yeardata.length) yeardata.forEach((d)=>{\r\n        if(d.key_as_string.slice(0,4)==year){\r\n        let temp = 0;\r\n        d.group_by_Type.buckets.forEach((bucket)=>{\r\n        temp+=bucket.total_count.value\r\n        })\r\n        yearcounts.push({\r\n        \"year\":d.key_as_string,\r\n        \"total_count\": temp\r\n        })}\r\n    })\r\n    setYearCount(yearcounts);\r\n    console.log(yearcounts);\r\n    },[yeardata])\r\n\r\n    useEffect(()=>{\r\n        const monthcount = [];\r\n        if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n          if(d.key_as_string.slice(0,4)==year){\r\n            d.group_by_month.buckets.forEach((bucket)=>{\r\n                let temp = 0;\r\n                bucket.group_by_Type.buckets.forEach((type)=>{\r\n                    temp+= type.total_count.value;\r\n                })\r\n                monthcount.push({'total':temp,'Month':bucket.key_as_string.slice(0,7)})\r\n            })}\r\n        })\r\n        setMonthCount(monthcount);\r\n        console.log(monthcount);\r\n    },[fetcheddata])\r\n\r\n    const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n        return (\r\n        <div className=\"custom-tooltip\">\r\n            <p className=\"label\">{`${payload[0].value}`}</p>\r\n        </div>\r\n        );\r\n    }\r\n    return null;\r\n    };\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer width={800} height={600}>\r\n        <PieChart width={200} height={400} margin={{bottom: 50}}>\r\n        <Pie\r\n          data={yearcount}\r\n          dataKey=\"total_count\"\r\n          cx={200}\r\n          cy={200}\r\n          outerRadius={50}\r\n          fill=\"#8884d8\"\r\n        >\r\n        </Pie>\r\n        <Pie\r\n          data={countmonth}\r\n          dataKey=\"total\"\r\n          cx={200}\r\n          cy={200}\r\n          innerRadius={70}\r\n          outerRadius={90}\r\n          fill=\"#82ca9d\"\r\n          label={({\r\n            cx,\r\n            cy,\r\n            midAngle,\r\n            innerRadius,\r\n            outerRadius,\r\n            total,\r\n            index\r\n          }) => {\r\n            console.log(\"handling label?\");\r\n            const RADIAN = Math.PI / 180;\r\n            const radius = 25 + innerRadius + (outerRadius - innerRadius);\r\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n            return ( \r\n              <text\r\n                x={x}\r\n                y={y}\r\n                fill= \"black\"\r\n                textAnchor={x > cx ? \"start\" : \"end\"}\r\n                dominantBaseline=\"central\"\r\n              >\r\n                {countmonth[index].Month}\r\n              </text>\r\n            );\r\n          }}\r\n        >\r\n        {countmonth.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n          </Pie>\r\n        <Legend layout=\"vertical\" wrapperStyle={{top: 30, left: 400}}\r\n        payload={\r\n          countmonth.map(\r\n            (item, index) => ({\r\n              value: `${item.Month} (${item.total})`,\r\n              type: \"square\",\r\n              id: item.month,\r\n              color: COLORS[index % COLORS.length]\r\n            })\r\n          )\r\n        }\r\n        />\r\n          <Tooltip content={<CustomTooltip />} />\r\n      </PieChart>\r\n      </ResponsiveContainer> \r\n    )\r\n}\r\n\r\nexport default MonthPieChart;\r\n","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearPieChart.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearBarGraph.js",["88","89","90","91","92"],"import React , {useEffect, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer } from \"recharts\";\r\n\r\nconst YearBarGraph = ({fetcheddata,year}) => {\r\n  const history = useHistory();\r\n    const [data, setData] = useState([]); \r\n    useEffect(()=>{\r\n        const arraydata = [];\r\n        let Casper = 0;\r\n        let Cirrus = 0;\r\n        let Gemini = 0;\r\n        let VIS = 0;\r\n        if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n          if(d.key_as_string.slice(0,4)==year){\r\n            d.group_by_month.buckets.forEach((month)=>{\r\n                month.group_by_Type.buckets.forEach((type)=>{\r\n                    if(type.key==\"Casper\") Casper+= type.total_count.value;\r\n                    else if(type.key==\"Cirrus\") Cirrus+=type.total_count.value;\r\n                    else if(type.key==\"Gemini\") Gemini+=type.total_count.value;\r\n                    else VIS+=type.total_count.value\r\n                })\r\n            })\r\n            arraydata.push({\"name\": d.key_as_string.slice(0,4),\"Casper\": Casper, \"Cirrus\": Cirrus, \"VIS\": VIS, \"Gemini\": Gemini})\r\n        }})\r\n        setData(arraydata);\r\n    },[fetcheddata])\r\n    console.log(data);\r\n    return (\r\n        <ResponsiveContainer width={500} height={500}>\r\n        <BarChart\r\n        width={400}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 50,\r\n          right: 80,\r\n          left: 90,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"5 5\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"vertical\" wrapperStyle={{top: 80, left: 460}}/>\r\n        <Bar dataKey=\"Casper\" stackId=\"d\" fill=\"#0088FE\" />\r\n        <Bar dataKey=\"Cirrus\" stackId=\"d\" fill=\"#00C49F\" />\r\n        <Bar dataKey=\"Gemini\" stackId=\"d\" fill=\"#FFBB28\" onClick={(data,index)=>{return history.push(`/yeartable/${data.name}`)}} />\r\n        <Bar dataKey=\"VIS\" stackId=\"d\" fill=\"#FF8042\" />\r\n      </BarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default YearBarGraph;\r\n","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Dropdown.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\styles.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Yearlytable.js",["93","94","95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":17,"column":13,"nodeType":"109","endLine":17,"endColumn":70},{"ruleId":"99","replacedBy":"110"},{"ruleId":"101","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":40,"nodeType":"114","messageId":"115","endLine":12,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":23,"column":7,"nodeType":"118","endLine":23,"endColumn":20,"suggestions":"119"},{"ruleId":"99","replacedBy":"120"},{"ruleId":"101","replacedBy":"121"},{"ruleId":"103","severity":1,"message":"122","line":2,"column":25,"nodeType":"105","messageId":"106","endLine":2,"endColumn":31},{"ruleId":"103","severity":1,"message":"123","line":2,"column":62,"nodeType":"105","messageId":"106","endLine":2,"endColumn":66},{"ruleId":"103","severity":1,"message":"124","line":10,"column":12,"nodeType":"105","messageId":"106","endLine":10,"endColumn":25},{"ruleId":"103","severity":1,"message":"125","line":11,"column":12,"nodeType":"105","messageId":"106","endLine":11,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":22,"column":38,"nodeType":"114","messageId":"115","endLine":22,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":24,"column":43,"nodeType":"114","messageId":"115","endLine":24,"endColumn":45},{"ruleId":"112","severity":1,"message":"113","line":11,"column":38,"nodeType":"114","messageId":"115","endLine":11,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":23,"column":7,"nodeType":"118","endLine":23,"endColumn":17,"suggestions":"126"},{"ruleId":"112","severity":1,"message":"113","line":28,"column":40,"nodeType":"114","messageId":"115","endLine":28,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":39,"column":7,"nodeType":"118","endLine":39,"endColumn":20,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"113","line":15,"column":40,"nodeType":"114","messageId":"115","endLine":15,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":18,"column":32,"nodeType":"114","messageId":"115","endLine":18,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":19,"column":37,"nodeType":"114","messageId":"115","endLine":19,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":20,"column":37,"nodeType":"114","messageId":"115","endLine":20,"endColumn":39},{"ruleId":"116","severity":1,"message":"117","line":27,"column":7,"nodeType":"118","endLine":27,"endColumn":20,"suggestions":"128"},{"ruleId":"103","severity":1,"message":"124","line":10,"column":12,"nodeType":"105","messageId":"106","endLine":10,"endColumn":25},{"ruleId":"103","severity":1,"message":"125","line":11,"column":12,"nodeType":"105","messageId":"106","endLine":11,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":21,"column":38,"nodeType":"114","messageId":"115","endLine":21,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":29,"column":24,"nodeType":"114","messageId":"115","endLine":29,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":30,"column":29,"nodeType":"114","messageId":"115","endLine":30,"endColumn":31},{"ruleId":"112","severity":1,"message":"113","line":31,"column":29,"nodeType":"114","messageId":"115","endLine":31,"endColumn":31},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'NestedPieChart' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["129"],["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'year'. Either include it or remove the dependency array.","ArrayExpression",["131"],["129"],["130"],"'Legend' is defined but never used.","'Cell' is defined but never used.","'gridColumnApi' is assigned a value but never used.","'rowData' is assigned a value but never used.",["132"],["133"],["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"135","fix":"139"},{"desc":"135","fix":"140"},"Update the dependencies array to be: [fetcheddata, year]",{"range":"141","text":"142"},"Update the dependencies array to be: [year, yeardata]",{"range":"143","text":"144"},{"range":"145","text":"142"},{"range":"146","text":"142"},[995,1008],"[fetcheddata, year]",[758,768],"[year, yeardata]",[1353,1366],[1212,1225]]