[{"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\index.js":"1","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\App.js":"2","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\api.js":"4","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Bargraph.js":"5","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Piechart.js":"6","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPiechart.js":"7","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPieChart.js":"8","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Table.js":"9","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\MonthPieChart.js":"10","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearPieChart.js":"11","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearBarGraph.js":"12","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Dropdown.js":"13","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\styles.js":"14","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Yearlytable.js":"15","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\index.js":"16","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\App.js":"17","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\MonthPieChart.js":"18","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\layout\\Navbar.js":"19","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Dropdown.js":"20","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\YearPieChart.js":"21","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\Bargraph.js":"22","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\YearBarGraph.js":"23","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Tables\\Yearlytable.js":"24","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\NestedPieChart.js":"25","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Tables\\Table.js":"26","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\utils\\styles.js":"27"},{"size":199,"mtime":1624938998774,"results":"28","hashOfConfig":"29"},{"size":4150,"mtime":1626427506840,"results":"30","hashOfConfig":"29"},{"size":1158,"mtime":1626413964440,"results":"31","hashOfConfig":"29"},{"size":173,"mtime":1624776988604,"results":"32","hashOfConfig":"29"},{"size":1906,"mtime":1626065644501,"results":"33","hashOfConfig":"29"},{"size":2696,"mtime":1625482200545,"results":"34","hashOfConfig":"29"},{"size":1917,"mtime":1624967268948,"results":"35","hashOfConfig":"29"},{"size":3230,"mtime":1625650215635,"results":"36","hashOfConfig":"29"},{"size":2877,"mtime":1626411106232,"results":"37","hashOfConfig":"29"},{"size":3764,"mtime":1626065560388,"results":"38","hashOfConfig":"29"},{"size":2782,"mtime":1625816912418,"results":"39","hashOfConfig":"29"},{"size":2130,"mtime":1626407608866,"results":"40","hashOfConfig":"29"},{"size":671,"mtime":1626068536621,"results":"41","hashOfConfig":"29"},{"size":817,"mtime":1626352038964,"results":"42","hashOfConfig":"29"},{"size":2973,"mtime":1626410864430,"results":"43","hashOfConfig":"29"},{"size":199,"mtime":1624938998774,"results":"44","hashOfConfig":"45"},{"size":4246,"mtime":1626507282328,"results":"46","hashOfConfig":"45"},{"size":3949,"mtime":1626508587822,"results":"47","hashOfConfig":"45"},{"size":1158,"mtime":1626413964440,"results":"48","hashOfConfig":"45"},{"size":671,"mtime":1626068536621,"results":"49","hashOfConfig":"45"},{"size":2826,"mtime":1626507619838,"results":"50","hashOfConfig":"45"},{"size":1906,"mtime":1626509151668,"results":"51","hashOfConfig":"45"},{"size":2130,"mtime":1626407608866,"results":"52","hashOfConfig":"45"},{"size":2973,"mtime":1626410864430,"results":"53","hashOfConfig":"45"},{"size":3230,"mtime":1625650215635,"results":"54","hashOfConfig":"45"},{"size":2877,"mtime":1626411106232,"results":"55","hashOfConfig":"45"},{"size":817,"mtime":1626352038964,"results":"56","hashOfConfig":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1bg3x6k",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1ipj6rw",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\index.js",[],["121","122"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\App.js",["123"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\layout\\Navbar.js",["124"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\api.js",[],["125","126"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Bargraph.js",["127","128"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer } from \"recharts\";\r\n  \r\n\r\nconst Bargraph = ({fetcheddata,year}) => {\r\n    const history = useHistory();\r\n    const [data, setData] = useState([]); \r\n    useEffect(()=>{\r\n        const arraydata = [];\r\n        if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n          if(d.key_as_string.slice(0,4)==year){\r\n            d.group_by_month.buckets.forEach((month)=>{\r\n                const temp = month.group_by_Type.buckets;\r\n                const data = {};\r\n                temp.forEach((type)=>{\r\n                    data[type.key] = type.total_count.value;\r\n                })\r\n                arraydata.push({\"name\": month.key_as_string.slice(0,7),\"Casper\": data['Casper'], \"Cirrus\": data['Cirrus'], \"VIS\": data['VIS'], \"Gemini\": data['Gemini']})\r\n            })}\r\n        })\r\n        setData(arraydata);\r\n    },[fetcheddata])\r\n    console.log(data);\r\n\r\n    return (\r\n        <ResponsiveContainer width={600} height={500}>\r\n        <BarChart\r\n        width={400}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 50,\r\n          right: 80,\r\n          left: 30,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"5 5\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"vertical\" wrapperStyle={{top: 80, left: 540}}/>\r\n        <Bar dataKey=\"Casper\" stackId=\"d\" fill=\"#0088FE\" />\r\n        <Bar dataKey=\"Cirrus\" stackId=\"d\" fill=\"#00C49F\" />\r\n        <Bar dataKey=\"Gemini\" stackId=\"d\" fill=\"#FFBB28\" onClick={(data,index)=>{return history.push(`/table/${data.name}`)}}/>\r\n        <Bar dataKey=\"VIS\" stackId=\"d\" fill=\"#FF8042\" />\r\n      </BarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default Bargraph;\r\n","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\Piechart.js",[],["129","130"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPiechart.js",["131","132"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\NestedPieChart.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Table.js",["133","134","135","136"],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\MonthPieChart.js",["137","138","139","140"],"import React , {useState, useEffect} from 'react'\r\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer,Cell } from 'recharts';\r\n\r\nconst MonthPieChart = ({fetcheddata,yeardata,year}) => {\r\n    const [yearcount, setYearCount] = useState([]);\r\n    const [countmonth, setMonthCount] = useState([]); \r\n\r\n    useEffect(()=>{\r\n    const yearcounts = [];\r\n    if(yeardata.length) yeardata.forEach((d)=>{\r\n        if(d.key_as_string.slice(0,4)==year){\r\n        let temp = 0;\r\n        d.group_by_Type.buckets.forEach((bucket)=>{\r\n        temp+=bucket.total_count.value\r\n        })\r\n        yearcounts.push({\r\n        \"year\":d.key_as_string,\r\n        \"total_count\": temp\r\n        })}\r\n    })\r\n    setYearCount(yearcounts);\r\n    console.log(yearcounts);\r\n    },[yeardata])\r\n\r\n    useEffect(()=>{\r\n        const monthcount = [];\r\n        if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n          if(d.key_as_string.slice(0,4)==year){\r\n            d.group_by_month.buckets.forEach((bucket)=>{\r\n                let temp = 0;\r\n                bucket.group_by_Type.buckets.forEach((type)=>{\r\n                    temp+= type.total_count.value;\r\n                })\r\n                monthcount.push({'total':temp,'Month':bucket.key_as_string.slice(0,7)})\r\n            })}\r\n        })\r\n        setMonthCount(monthcount);\r\n        console.log(monthcount);\r\n    },[fetcheddata])\r\n\r\n    const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n        return (\r\n        <div className=\"custom-tooltip\">\r\n            <p className=\"label\">{`${payload[0].value}`}</p>\r\n        </div>\r\n        );\r\n    }\r\n    return null;\r\n    };\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer width={800} height={600}>\r\n        <PieChart width={200} height={400} margin={{bottom: 50}}>\r\n        <Pie\r\n          data={yearcount}\r\n          dataKey=\"total_count\"\r\n          cx={200}\r\n          cy={200}\r\n          outerRadius={50}\r\n          fill=\"#8884d8\"\r\n        >\r\n        </Pie>\r\n        <Pie\r\n          data={countmonth}\r\n          dataKey=\"total\"\r\n          cx={200}\r\n          cy={200}\r\n          innerRadius={70}\r\n          outerRadius={90}\r\n          fill=\"#82ca9d\"\r\n          label={({\r\n            cx,\r\n            cy,\r\n            midAngle,\r\n            innerRadius,\r\n            outerRadius,\r\n            total,\r\n            index\r\n          }) => {\r\n            console.log(\"handling label?\");\r\n            const RADIAN = Math.PI / 180;\r\n            const radius = 25 + innerRadius + (outerRadius - innerRadius);\r\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n            return ( \r\n              <text\r\n                x={x}\r\n                y={y}\r\n                fill= \"black\"\r\n                textAnchor={x > cx ? \"start\" : \"end\"}\r\n                dominantBaseline=\"central\"\r\n              >\r\n                {countmonth[index].Month}\r\n              </text>\r\n            );\r\n          }}\r\n        >\r\n        {countmonth.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n          </Pie>\r\n        <Legend layout=\"vertical\" wrapperStyle={{top: 30, left: 400}}\r\n        payload={\r\n          countmonth.map(\r\n            (item, index) => ({\r\n              value: `${item.Month} (${item.total})`,\r\n              type: \"square\",\r\n              id: item.month,\r\n              color: COLORS[index % COLORS.length]\r\n            })\r\n          )\r\n        }\r\n        />\r\n          <Tooltip content={<CustomTooltip />} />\r\n      </PieChart>\r\n      </ResponsiveContainer> \r\n    )\r\n}\r\n\r\nexport default MonthPieChart;\r\n","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearPieChart.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Charts\\YearBarGraph.js",["141","142","143","144","145"],"import React , {useEffect, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer } from \"recharts\";\r\n\r\nconst YearBarGraph = ({fetcheddata,year}) => {\r\n  const history = useHistory();\r\n    const [data, setData] = useState([]); \r\n    useEffect(()=>{\r\n        const arraydata = [];\r\n        let Casper = 0;\r\n        let Cirrus = 0;\r\n        let Gemini = 0;\r\n        let VIS = 0;\r\n        if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n          if(d.key_as_string.slice(0,4)==year){\r\n            d.group_by_month.buckets.forEach((month)=>{\r\n                month.group_by_Type.buckets.forEach((type)=>{\r\n                    if(type.key==\"Casper\") Casper+= type.total_count.value;\r\n                    else if(type.key==\"Cirrus\") Cirrus+=type.total_count.value;\r\n                    else if(type.key==\"Gemini\") Gemini+=type.total_count.value;\r\n                    else VIS+=type.total_count.value\r\n                })\r\n            })\r\n            arraydata.push({\"name\": d.key_as_string.slice(0,4),\"Casper\": Casper, \"Cirrus\": Cirrus, \"VIS\": VIS, \"Gemini\": Gemini})\r\n        }})\r\n        setData(arraydata);\r\n    },[fetcheddata])\r\n    console.log(data);\r\n    return (\r\n        <ResponsiveContainer width={500} height={500}>\r\n        <BarChart\r\n        width={400}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 50,\r\n          right: 80,\r\n          left: 90,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"5 5\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"vertical\" wrapperStyle={{top: 80, left: 460}}/>\r\n        <Bar dataKey=\"Casper\" stackId=\"d\" fill=\"#0088FE\" />\r\n        <Bar dataKey=\"Cirrus\" stackId=\"d\" fill=\"#00C49F\" />\r\n        <Bar dataKey=\"Gemini\" stackId=\"d\" fill=\"#FFBB28\" onClick={(data,index)=>{return history.push(`/yeartable/${data.name}`)}} />\r\n        <Bar dataKey=\"VIS\" stackId=\"d\" fill=\"#FF8042\" />\r\n      </BarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default YearBarGraph;\r\n","C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Dropdown.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\utils\\styles.js",[],"C:\\Users\\AMISHA\\Desktop\\Web_Development_Projects\\Analytics_Dashboard_React\\client\\src\\components\\Tables\\Yearlytable.js",["146","147","148","149","150","151"],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\index.js",[],["152","153"],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\App.js",["154"],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\MonthPieChart.js",["155","156","157","158"],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\layout\\Navbar.js",["159"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <container style={{padding:\"0px 0px\"}}>\r\n        <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n        <container style={{display:'flex', justifyContent:'space-around'}}>\r\n            <div style={{paddingLeft:\"15px\",paddingRight:\"15px\", marginRight:\"5px\"}} class=\"navlinks\">\r\n                <Link to=\"/year\" style={{textDecoration:'none', color:'white', fontSize:'18px'}}><span className=\"navtext\">Yearly View</span></Link>\r\n            </div>\r\n            {/* <div style={{borderLeft:\"2px solid white\"}}></div> */}\r\n            <div style={{paddingLeft:\"15px\",paddingRight:\"15px\"}} class=\"navlinks\">\r\n                <Link to=\"/\" classname=\"navtext\" style={{textDecoration:'none', color:'white', fontSize:'18px'}}><span className=\"navtext\">Monthly View</span></Link>\r\n            </div>\r\n            <div>\r\n            <a style={{marginLeft:\"250px\"}} className=\"navbar-brand\"> Entitlements Dashboard</a>\r\n            </div>\r\n            </container>\r\n        </nav> \r\n        </container>       \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Dropdown.js",[],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\YearPieChart.js",[],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\Bargraph.js",["160","161"],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\YearBarGraph.js",["162","163","164","165","166"],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Tables\\Yearlytable.js",["167","168","169","170","171","172"],"import React,{useState, useEffect} from 'react';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\n// import { AllModules } from 'ag-grid-enterprise';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nconst Yearlytable = ({fetcheddata}) => {\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    const [rowData, setRowData] = useState(null);\r\n\r\n    const [year, setYear] = useState(); \r\n    useEffect(()=>{\r\n        setYear(window.location.pathname.slice(11,15));\r\n    },[])\r\n\r\n \r\n    const arrdata = [];\r\n    if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n        if(d.key_as_string.slice(0,4)==year){\r\n        d.group_by_month.buckets.forEach((bucket)=>{\r\n            var Casper = 0;\r\n            var VIS = 0;\r\n            var Gemini = 0;\r\n            var Cirrus = 0;\r\n        bucket.group_by_day.buckets.forEach((day)=>{\r\n        day.group_by_Type.buckets.forEach((type)=>{\r\n            if(type.key==\"Casper\") Casper+=type.total_count.value;\r\n            else if(type.key==\"Cirrus\") Cirrus+=type.total_count.value;\r\n            else if(type.key==\"Gemini\") Gemini+=type.total_count.value;\r\n            else VIS+=type.total_count.value\r\n        })\r\n    })\r\n    arrdata.push({\"Month\":bucket.key_as_string.slice(0,7),\"Casper\": Casper, \"Cirrus\": Cirrus, \"VIS\": VIS, \"Gemini\": Gemini})\r\n\r\n})\r\n    console.log(arrdata);\r\n}})\r\n\r\nconst onGridReady = (params) => {\r\n    setGridApi(params.api);\r\n    setGridColumnApi(params.columnApi);\r\n\r\n    const updateData = (arrdata) => {\r\n      setRowData(arrdata);\r\n    };\r\n\r\n        updateData(arrdata);\r\n  };\r\n\r\n  const onBtExport = () => {\r\n    gridApi.exportDataAsExcel();\r\n  };\r\n\r\n    return (\r\n        <container style={{display:\"flex\"}}>\r\n        <div  className=\"ag-theme-alpine\" style={{marginRight:\"15px\",height: 700, width: 1000, marginLeft: \"130px\", marginTop:\"70px\"}}>\r\n           <AgGridReact \r\n                modules={AllModules}\r\n                defaultColDef={{\r\n                    sortable: true,\r\n                    filter: true,\r\n                    resizable: true,\r\n                    minWidth: 100,\r\n                    flex: 1,\r\n                }}\r\n                onGridReady={onGridReady}\r\n               rowData={arrdata}>\r\n               <AgGridColumn field=\"Month\"></AgGridColumn>\r\n               <AgGridColumn field=\"Casper\"></AgGridColumn>\r\n               <AgGridColumn field=\"Cirrus\"></AgGridColumn>\r\n               <AgGridColumn field=\"VIS\"></AgGridColumn>\r\n               <AgGridColumn field=\"Gemini\"></AgGridColumn>\r\n           </AgGridReact>\r\n       </div>\r\n       <div className=\"btn btn-dark\" style={{height:\"40px\", marginTop:\"70px\"}} onClick={() => onBtExport()}>\r\n            <i className=\"fas fa-download\" />\r\n        </div>\r\n       </container>\r\n    )\r\n}\r\n\r\nexport default Yearlytable;\r\n","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Charts\\NestedPieChart.js",[],"C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\components\\Tables\\Table.js",["173","174","175","176"],"import React, { useState, useEffect } from 'react'\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\n\r\nconst Table = ({fetcheddata}) => {\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    const [rowData, setRowData] = useState(null);\r\n\r\n    const [year, setYear] = useState(); \r\n    const [month, setMonth] = useState(); \r\n    useEffect(() => {\r\n        setYear(window.location.pathname.slice(7,11));\r\n        setMonth(window.location.pathname.slice(12,14));\r\n    }, [])\r\n\r\n    const arrdata = [];\r\n    if(fetcheddata.length) fetcheddata.forEach((d)=>{\r\n        if(d.key_as_string.slice(0,4)==year){\r\n        d.group_by_month.buckets.forEach((bucket)=>{\r\n        if(bucket.key_as_string.slice(5,7)==month){\r\n        bucket.group_by_day.buckets.forEach((day)=>{\r\n        const temp = day.group_by_Type.buckets;\r\n            const data = {};\r\n            temp.forEach((type)=>{\r\n            data[type.key] = type.total_count.value;\r\n        })\r\n        arrdata.push({\"Day\":day.key_as_string.slice(0,10),\"Casper\": data['Casper'], \"Cirrus\": data['Cirrus'], \"VIS\": data['VIS'], \"Gemini\": data['Gemini']})\r\n    })\r\n    console.log(arrdata);\r\n    }\r\n    })}})\r\n\r\n    const onGridReady = (params) => {\r\n        setGridApi(params.api);\r\n        setGridColumnApi(params.columnApi);\r\n    \r\n        const updateData = (arrdata) => {\r\n          setRowData(arrdata);\r\n        };\r\n    \r\n            updateData(arrdata);\r\n      };\r\n    \r\n      const onBtExport = () => {\r\n        gridApi.exportDataAsExcel();\r\n      };\r\n    \r\n   \r\n    return (\r\n        <container style={{display:\"flex\"}}>\r\n        <div  className=\"ag-theme-alpine\" style={{marginRight:\"15px\",height: 700, width: 1000, marginLeft: \"130px\", marginTop:\"70px\"}}>\r\n           <AgGridReact\r\n            modules={AllModules}\r\n            defaultColDef={{\r\n                sortable: true,\r\n                filter: true,\r\n                resizable: true,\r\n                minWidth: 100,\r\n                flex: 1,\r\n            }}\r\n            onGridReady={onGridReady}\r\n               rowData={arrdata}>\r\n               <AgGridColumn field=\"Day\"></AgGridColumn>\r\n               <AgGridColumn field=\"Casper\"></AgGridColumn>\r\n               <AgGridColumn field=\"Cirrus\"></AgGridColumn>\r\n               <AgGridColumn field=\"VIS\"></AgGridColumn>\r\n               <AgGridColumn field=\"Gemini\"></AgGridColumn>\r\n           </AgGridReact>\r\n       </div>\r\n       <div className=\"btn btn-dark\" style={{height:\"40px\", marginTop:\"70px\"}}>\r\n                <i className=\"fas fa-download\" onClick={() => onBtExport()}/>\r\n        </div>\r\n       </container>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","C:\\Users\\AMISHA\\Desktop\\Analytics_Dashboard_POC\\client\\src\\utils\\styles.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":22},{"ruleId":"185","severity":1,"message":"186","line":17,"column":13,"nodeType":"187","endLine":17,"endColumn":70},{"ruleId":"177","replacedBy":"188"},{"ruleId":"179","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":12,"column":40,"nodeType":"192","messageId":"193","endLine":12,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":23,"column":7,"nodeType":"196","endLine":23,"endColumn":20,"suggestions":"197"},{"ruleId":"177","replacedBy":"198"},{"ruleId":"179","replacedBy":"199"},{"ruleId":"181","severity":1,"message":"200","line":2,"column":25,"nodeType":"183","messageId":"184","endLine":2,"endColumn":31},{"ruleId":"181","severity":1,"message":"201","line":2,"column":62,"nodeType":"183","messageId":"184","endLine":2,"endColumn":66},{"ruleId":"181","severity":1,"message":"202","line":10,"column":12,"nodeType":"183","messageId":"184","endLine":10,"endColumn":25},{"ruleId":"181","severity":1,"message":"203","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":22,"column":38,"nodeType":"192","messageId":"193","endLine":22,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":24,"column":43,"nodeType":"192","messageId":"193","endLine":24,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":11,"column":38,"nodeType":"192","messageId":"193","endLine":11,"endColumn":40},{"ruleId":"194","severity":1,"message":"195","line":23,"column":7,"nodeType":"196","endLine":23,"endColumn":17,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"191","line":28,"column":40,"nodeType":"192","messageId":"193","endLine":28,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":39,"column":7,"nodeType":"196","endLine":39,"endColumn":20,"suggestions":"205"},{"ruleId":"190","severity":1,"message":"191","line":15,"column":40,"nodeType":"192","messageId":"193","endLine":15,"endColumn":42},{"ruleId":"190","severity":1,"message":"191","line":18,"column":32,"nodeType":"192","messageId":"193","endLine":18,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":19,"column":37,"nodeType":"192","messageId":"193","endLine":19,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":20,"column":37,"nodeType":"192","messageId":"193","endLine":20,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":27,"column":7,"nodeType":"196","endLine":27,"endColumn":20,"suggestions":"206"},{"ruleId":"181","severity":1,"message":"202","line":10,"column":12,"nodeType":"183","messageId":"184","endLine":10,"endColumn":25},{"ruleId":"181","severity":1,"message":"203","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":21,"column":38,"nodeType":"192","messageId":"193","endLine":21,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":29,"column":24,"nodeType":"192","messageId":"193","endLine":29,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":30,"column":29,"nodeType":"192","messageId":"193","endLine":30,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":31,"column":29,"nodeType":"192","messageId":"193","endLine":31,"endColumn":31},{"ruleId":"177","replacedBy":"207"},{"ruleId":"179","replacedBy":"208"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":11,"column":38,"nodeType":"192","messageId":"193","endLine":11,"endColumn":40},{"ruleId":"194","severity":1,"message":"195","line":23,"column":7,"nodeType":"196","endLine":23,"endColumn":17,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"191","line":28,"column":40,"nodeType":"192","messageId":"193","endLine":28,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":39,"column":7,"nodeType":"196","endLine":39,"endColumn":20,"suggestions":"210"},{"ruleId":"185","severity":1,"message":"186","line":17,"column":13,"nodeType":"187","endLine":17,"endColumn":70},{"ruleId":"190","severity":1,"message":"191","line":12,"column":40,"nodeType":"192","messageId":"193","endLine":12,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":23,"column":7,"nodeType":"196","endLine":23,"endColumn":20,"suggestions":"211"},{"ruleId":"190","severity":1,"message":"191","line":15,"column":40,"nodeType":"192","messageId":"193","endLine":15,"endColumn":42},{"ruleId":"190","severity":1,"message":"191","line":18,"column":32,"nodeType":"192","messageId":"193","endLine":18,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":19,"column":37,"nodeType":"192","messageId":"193","endLine":19,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":20,"column":37,"nodeType":"192","messageId":"193","endLine":20,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":27,"column":7,"nodeType":"196","endLine":27,"endColumn":20,"suggestions":"212"},{"ruleId":"181","severity":1,"message":"202","line":10,"column":12,"nodeType":"183","messageId":"184","endLine":10,"endColumn":25},{"ruleId":"181","severity":1,"message":"203","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":21,"column":38,"nodeType":"192","messageId":"193","endLine":21,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":29,"column":24,"nodeType":"192","messageId":"193","endLine":29,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":30,"column":29,"nodeType":"192","messageId":"193","endLine":30,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":31,"column":29,"nodeType":"192","messageId":"193","endLine":31,"endColumn":31},{"ruleId":"181","severity":1,"message":"202","line":10,"column":12,"nodeType":"183","messageId":"184","endLine":10,"endColumn":25},{"ruleId":"181","severity":1,"message":"203","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":22,"column":38,"nodeType":"192","messageId":"193","endLine":22,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":24,"column":43,"nodeType":"192","messageId":"193","endLine":24,"endColumn":45},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'NestedPieChart' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["213"],["214"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'year'. Either include it or remove the dependency array.","ArrayExpression",["215"],["213"],["214"],"'Legend' is defined but never used.","'Cell' is defined but never used.","'gridColumnApi' is assigned a value but never used.","'rowData' is assigned a value but never used.",["216"],["217"],["218"],["213"],["214"],["219"],["220"],["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"223","fix":"227"},{"desc":"223","fix":"228"},{"desc":"225","fix":"229"},{"desc":"223","fix":"230"},{"desc":"223","fix":"231"},{"desc":"223","fix":"232"},"Update the dependencies array to be: [fetcheddata, year]",{"range":"233","text":"234"},"Update the dependencies array to be: [year, yeardata]",{"range":"235","text":"236"},{"range":"237","text":"234"},{"range":"238","text":"234"},{"range":"239","text":"236"},{"range":"240","text":"234"},{"range":"241","text":"234"},{"range":"242","text":"234"},[995,1008],"[fetcheddata, year]",[758,768],"[year, yeardata]",[1353,1366],[1212,1225],[758,768],[1353,1366],[995,1008],[1212,1225]]